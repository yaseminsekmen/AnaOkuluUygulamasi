#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnaOkuluUygulamasi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AnaOkulu")]
	public partial class AnaOkuluDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBirimler(Birimler instance);
    partial void UpdateBirimler(Birimler instance);
    partial void DeleteBirimler(Birimler instance);
    partial void InsertCocuk(Cocuk instance);
    partial void UpdateCocuk(Cocuk instance);
    partial void DeleteCocuk(Cocuk instance);
    partial void InsertGorevlendirme(Gorevlendirme instance);
    partial void UpdateGorevlendirme(Gorevlendirme instance);
    partial void DeleteGorevlendirme(Gorevlendirme instance);
    partial void InsertHocalar(Hocalar instance);
    partial void UpdateHocalar(Hocalar instance);
    partial void DeleteHocalar(Hocalar instance);
    partial void InsertOdemeler(Odemeler instance);
    partial void UpdateOdemeler(Odemeler instance);
    partial void DeleteOdemeler(Odemeler instance);
    partial void InsertProjeler(Projeler instance);
    partial void UpdateProjeler(Projeler instance);
    partial void DeleteProjeler(Projeler instance);
    partial void InsertRehberlik(Rehberlik instance);
    partial void UpdateRehberlik(Rehberlik instance);
    partial void DeleteRehberlik(Rehberlik instance);
    partial void InsertSubeler(Subeler instance);
    partial void UpdateSubeler(Subeler instance);
    partial void DeleteSubeler(Subeler instance);
    #endregion
		
		public AnaOkuluDataContext() : 
				base(global::AnaOkuluUygulamasi.Properties.Settings.Default.AnaOkuluConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AnaOkuluDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnaOkuluDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnaOkuluDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnaOkuluDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Birimler> Birimlers
		{
			get
			{
				return this.GetTable<Birimler>();
			}
		}
		
		public System.Data.Linq.Table<Cocuk> Cocuks
		{
			get
			{
				return this.GetTable<Cocuk>();
			}
		}
		
		public System.Data.Linq.Table<Gorevlendirme> Gorevlendirmes
		{
			get
			{
				return this.GetTable<Gorevlendirme>();
			}
		}
		
		public System.Data.Linq.Table<Hocalar> Hocalars
		{
			get
			{
				return this.GetTable<Hocalar>();
			}
		}
		
		public System.Data.Linq.Table<Odemeler> Odemelers
		{
			get
			{
				return this.GetTable<Odemeler>();
			}
		}
		
		public System.Data.Linq.Table<Projeler> Projelers
		{
			get
			{
				return this.GetTable<Projeler>();
			}
		}
		
		public System.Data.Linq.Table<Rehberlik> Rehberliks
		{
			get
			{
				return this.GetTable<Rehberlik>();
			}
		}
		
		public System.Data.Linq.Table<Subeler> Subelers
		{
			get
			{
				return this.GetTable<Subeler>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Birimler")]
	public partial class Birimler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _birim_id;
		
		private string _BirimAdi;
		
		private EntitySet<Hocalar> _Hocalars;
		
		private EntitySet<Subeler> _Subelers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbirim_idChanging(int value);
    partial void Onbirim_idChanged();
    partial void OnBirimAdiChanging(string value);
    partial void OnBirimAdiChanged();
    #endregion
		
		public Birimler()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			this._Subelers = new EntitySet<Subeler>(new Action<Subeler>(this.attach_Subelers), new Action<Subeler>(this.detach_Subelers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birim_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int birim_id
		{
			get
			{
				return this._birim_id;
			}
			set
			{
				if ((this._birim_id != value))
				{
					this.Onbirim_idChanging(value);
					this.SendPropertyChanging();
					this._birim_id = value;
					this.SendPropertyChanged("birim_id");
					this.Onbirim_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirimAdi", DbType="VarChar(50)")]
		public string BirimAdi
		{
			get
			{
				return this._BirimAdi;
			}
			set
			{
				if ((this._BirimAdi != value))
				{
					this.OnBirimAdiChanging(value);
					this.SendPropertyChanging();
					this._BirimAdi = value;
					this.SendPropertyChanged("BirimAdi");
					this.OnBirimAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Birimler_Hocalar", Storage="_Hocalars", ThisKey="birim_id", OtherKey="birim_id")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Birimler_Subeler", Storage="_Subelers", ThisKey="birim_id", OtherKey="birim_id")]
		public EntitySet<Subeler> Subelers
		{
			get
			{
				return this._Subelers;
			}
			set
			{
				this._Subelers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Birimler = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Birimler = null;
		}
		
		private void attach_Subelers(Subeler entity)
		{
			this.SendPropertyChanging();
			entity.Birimler = this;
		}
		
		private void detach_Subelers(Subeler entity)
		{
			this.SendPropertyChanging();
			entity.Birimler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cocuk")]
	public partial class Cocuk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cocuk_id;
		
		private string _Tc;
		
		private string _AdSoyad;
		
		private System.Nullable<int> _Yas;
		
		private string _Cinsiyet;
		
		private EntitySet<Hocalar> _Hocalars;
		
		private EntitySet<Odemeler> _Odemelers;
		
		private EntitySet<Projeler> _Projelers;
		
		private EntitySet<Rehberlik> _Rehberliks;
		
		private EntitySet<Subeler> _Subelers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncocuk_idChanging(int value);
    partial void Oncocuk_idChanged();
    partial void OnTcChanging(string value);
    partial void OnTcChanged();
    partial void OnAdSoyadChanging(string value);
    partial void OnAdSoyadChanged();
    partial void OnYasChanging(System.Nullable<int> value);
    partial void OnYasChanged();
    partial void OnCinsiyetChanging(string value);
    partial void OnCinsiyetChanged();
    #endregion
		
		public Cocuk()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			this._Odemelers = new EntitySet<Odemeler>(new Action<Odemeler>(this.attach_Odemelers), new Action<Odemeler>(this.detach_Odemelers));
			this._Projelers = new EntitySet<Projeler>(new Action<Projeler>(this.attach_Projelers), new Action<Projeler>(this.detach_Projelers));
			this._Rehberliks = new EntitySet<Rehberlik>(new Action<Rehberlik>(this.attach_Rehberliks), new Action<Rehberlik>(this.detach_Rehberliks));
			this._Subelers = new EntitySet<Subeler>(new Action<Subeler>(this.attach_Subelers), new Action<Subeler>(this.detach_Subelers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cocuk_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cocuk_id
		{
			get
			{
				return this._cocuk_id;
			}
			set
			{
				if ((this._cocuk_id != value))
				{
					this.Oncocuk_idChanging(value);
					this.SendPropertyChanging();
					this._cocuk_id = value;
					this.SendPropertyChanged("cocuk_id");
					this.Oncocuk_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tc", DbType="Char(11)")]
		public string Tc
		{
			get
			{
				return this._Tc;
			}
			set
			{
				if ((this._Tc != value))
				{
					this.OnTcChanging(value);
					this.SendPropertyChanging();
					this._Tc = value;
					this.SendPropertyChanged("Tc");
					this.OnTcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdSoyad", DbType="VarChar(50)")]
		public string AdSoyad
		{
			get
			{
				return this._AdSoyad;
			}
			set
			{
				if ((this._AdSoyad != value))
				{
					this.OnAdSoyadChanging(value);
					this.SendPropertyChanging();
					this._AdSoyad = value;
					this.SendPropertyChanged("AdSoyad");
					this.OnAdSoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yas", DbType="Int")]
		public System.Nullable<int> Yas
		{
			get
			{
				return this._Yas;
			}
			set
			{
				if ((this._Yas != value))
				{
					this.OnYasChanging(value);
					this.SendPropertyChanging();
					this._Yas = value;
					this.SendPropertyChanged("Yas");
					this.OnYasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cinsiyet", DbType="VarChar(50)")]
		public string Cinsiyet
		{
			get
			{
				return this._Cinsiyet;
			}
			set
			{
				if ((this._Cinsiyet != value))
				{
					this.OnCinsiyetChanging(value);
					this.SendPropertyChanging();
					this._Cinsiyet = value;
					this.SendPropertyChanged("Cinsiyet");
					this.OnCinsiyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Hocalar", Storage="_Hocalars", ThisKey="cocuk_id", OtherKey="cocuk_id")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Odemeler", Storage="_Odemelers", ThisKey="cocuk_id", OtherKey="cocuk_id")]
		public EntitySet<Odemeler> Odemelers
		{
			get
			{
				return this._Odemelers;
			}
			set
			{
				this._Odemelers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Projeler", Storage="_Projelers", ThisKey="cocuk_id", OtherKey="cocuk_id")]
		public EntitySet<Projeler> Projelers
		{
			get
			{
				return this._Projelers;
			}
			set
			{
				this._Projelers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Rehberlik", Storage="_Rehberliks", ThisKey="cocuk_id", OtherKey="cocuk_id")]
		public EntitySet<Rehberlik> Rehberliks
		{
			get
			{
				return this._Rehberliks;
			}
			set
			{
				this._Rehberliks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Subeler", Storage="_Subelers", ThisKey="cocuk_id", OtherKey="cocuk_id")]
		public EntitySet<Subeler> Subelers
		{
			get
			{
				return this._Subelers;
			}
			set
			{
				this._Subelers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = null;
		}
		
		private void attach_Odemelers(Odemeler entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = this;
		}
		
		private void detach_Odemelers(Odemeler entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = null;
		}
		
		private void attach_Projelers(Projeler entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = this;
		}
		
		private void detach_Projelers(Projeler entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = null;
		}
		
		private void attach_Rehberliks(Rehberlik entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = this;
		}
		
		private void detach_Rehberliks(Rehberlik entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = null;
		}
		
		private void attach_Subelers(Subeler entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = this;
		}
		
		private void detach_Subelers(Subeler entity)
		{
			this.SendPropertyChanging();
			entity.Cocuk = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gorevlendirme")]
	public partial class Gorevlendirme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _görev_id;
		
		private string _GorevAdi;
		
		private string _GorevYeri;
		
		private EntitySet<Hocalar> _Hocalars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongörev_idChanging(int value);
    partial void Ongörev_idChanged();
    partial void OnGorevAdiChanging(string value);
    partial void OnGorevAdiChanged();
    partial void OnGorevYeriChanging(string value);
    partial void OnGorevYeriChanged();
    #endregion
		
		public Gorevlendirme()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_görev_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int görev_id
		{
			get
			{
				return this._görev_id;
			}
			set
			{
				if ((this._görev_id != value))
				{
					this.Ongörev_idChanging(value);
					this.SendPropertyChanging();
					this._görev_id = value;
					this.SendPropertyChanged("görev_id");
					this.Ongörev_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GorevAdi", DbType="VarChar(50)")]
		public string GorevAdi
		{
			get
			{
				return this._GorevAdi;
			}
			set
			{
				if ((this._GorevAdi != value))
				{
					this.OnGorevAdiChanging(value);
					this.SendPropertyChanging();
					this._GorevAdi = value;
					this.SendPropertyChanged("GorevAdi");
					this.OnGorevAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GorevYeri", DbType="VarChar(50)")]
		public string GorevYeri
		{
			get
			{
				return this._GorevYeri;
			}
			set
			{
				if ((this._GorevYeri != value))
				{
					this.OnGorevYeriChanging(value);
					this.SendPropertyChanging();
					this._GorevYeri = value;
					this.SendPropertyChanged("GorevYeri");
					this.OnGorevYeriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gorevlendirme_Hocalar", Storage="_Hocalars", ThisKey="görev_id", OtherKey="görev_id")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Gorevlendirme = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Gorevlendirme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hocalar")]
	public partial class Hocalar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hoca_id;
		
		private System.Nullable<int> _cocuk_id;
		
		private System.Nullable<int> _birim_id;
		
		private System.Nullable<int> _görev_id;
		
		private System.Nullable<int> _sube_id;
		
		private System.Nullable<int> _proje_id;
		
		private string _AdSoyad;
		
		private EntityRef<Birimler> _Birimler;
		
		private EntityRef<Cocuk> _Cocuk;
		
		private EntityRef<Gorevlendirme> _Gorevlendirme;
		
		private EntityRef<Projeler> _Projeler;
		
		private EntityRef<Subeler> _Subeler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhoca_idChanging(int value);
    partial void Onhoca_idChanged();
    partial void Oncocuk_idChanging(System.Nullable<int> value);
    partial void Oncocuk_idChanged();
    partial void Onbirim_idChanging(System.Nullable<int> value);
    partial void Onbirim_idChanged();
    partial void Ongörev_idChanging(System.Nullable<int> value);
    partial void Ongörev_idChanged();
    partial void Onsube_idChanging(System.Nullable<int> value);
    partial void Onsube_idChanged();
    partial void Onproje_idChanging(System.Nullable<int> value);
    partial void Onproje_idChanged();
    partial void OnAdSoyadChanging(string value);
    partial void OnAdSoyadChanged();
    #endregion
		
		public Hocalar()
		{
			this._Birimler = default(EntityRef<Birimler>);
			this._Cocuk = default(EntityRef<Cocuk>);
			this._Gorevlendirme = default(EntityRef<Gorevlendirme>);
			this._Projeler = default(EntityRef<Projeler>);
			this._Subeler = default(EntityRef<Subeler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoca_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int hoca_id
		{
			get
			{
				return this._hoca_id;
			}
			set
			{
				if ((this._hoca_id != value))
				{
					this.Onhoca_idChanging(value);
					this.SendPropertyChanging();
					this._hoca_id = value;
					this.SendPropertyChanged("hoca_id");
					this.Onhoca_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cocuk_id", DbType="Int")]
		public System.Nullable<int> cocuk_id
		{
			get
			{
				return this._cocuk_id;
			}
			set
			{
				if ((this._cocuk_id != value))
				{
					if (this._Cocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncocuk_idChanging(value);
					this.SendPropertyChanging();
					this._cocuk_id = value;
					this.SendPropertyChanged("cocuk_id");
					this.Oncocuk_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birim_id", DbType="Int")]
		public System.Nullable<int> birim_id
		{
			get
			{
				return this._birim_id;
			}
			set
			{
				if ((this._birim_id != value))
				{
					if (this._Birimler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbirim_idChanging(value);
					this.SendPropertyChanging();
					this._birim_id = value;
					this.SendPropertyChanged("birim_id");
					this.Onbirim_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_görev_id", DbType="Int")]
		public System.Nullable<int> görev_id
		{
			get
			{
				return this._görev_id;
			}
			set
			{
				if ((this._görev_id != value))
				{
					if (this._Gorevlendirme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongörev_idChanging(value);
					this.SendPropertyChanging();
					this._görev_id = value;
					this.SendPropertyChanged("görev_id");
					this.Ongörev_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sube_id", DbType="Int")]
		public System.Nullable<int> sube_id
		{
			get
			{
				return this._sube_id;
			}
			set
			{
				if ((this._sube_id != value))
				{
					if (this._Subeler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsube_idChanging(value);
					this.SendPropertyChanging();
					this._sube_id = value;
					this.SendPropertyChanged("sube_id");
					this.Onsube_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proje_id", DbType="Int")]
		public System.Nullable<int> proje_id
		{
			get
			{
				return this._proje_id;
			}
			set
			{
				if ((this._proje_id != value))
				{
					if (this._Projeler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproje_idChanging(value);
					this.SendPropertyChanging();
					this._proje_id = value;
					this.SendPropertyChanged("proje_id");
					this.Onproje_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdSoyad", DbType="VarChar(50)")]
		public string AdSoyad
		{
			get
			{
				return this._AdSoyad;
			}
			set
			{
				if ((this._AdSoyad != value))
				{
					this.OnAdSoyadChanging(value);
					this.SendPropertyChanging();
					this._AdSoyad = value;
					this.SendPropertyChanged("AdSoyad");
					this.OnAdSoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Birimler_Hocalar", Storage="_Birimler", ThisKey="birim_id", OtherKey="birim_id", IsForeignKey=true)]
		public Birimler Birimler
		{
			get
			{
				return this._Birimler.Entity;
			}
			set
			{
				Birimler previousValue = this._Birimler.Entity;
				if (((previousValue != value) 
							|| (this._Birimler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Birimler.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Birimler.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._birim_id = value.birim_id;
					}
					else
					{
						this._birim_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Birimler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Hocalar", Storage="_Cocuk", ThisKey="cocuk_id", OtherKey="cocuk_id", IsForeignKey=true)]
		public Cocuk Cocuk
		{
			get
			{
				return this._Cocuk.Entity;
			}
			set
			{
				Cocuk previousValue = this._Cocuk.Entity;
				if (((previousValue != value) 
							|| (this._Cocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cocuk.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Cocuk.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._cocuk_id = value.cocuk_id;
					}
					else
					{
						this._cocuk_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cocuk");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gorevlendirme_Hocalar", Storage="_Gorevlendirme", ThisKey="görev_id", OtherKey="görev_id", IsForeignKey=true)]
		public Gorevlendirme Gorevlendirme
		{
			get
			{
				return this._Gorevlendirme.Entity;
			}
			set
			{
				Gorevlendirme previousValue = this._Gorevlendirme.Entity;
				if (((previousValue != value) 
							|| (this._Gorevlendirme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gorevlendirme.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Gorevlendirme.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._görev_id = value.görev_id;
					}
					else
					{
						this._görev_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gorevlendirme");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projeler_Hocalar", Storage="_Projeler", ThisKey="proje_id", OtherKey="proje_id", IsForeignKey=true)]
		public Projeler Projeler
		{
			get
			{
				return this._Projeler.Entity;
			}
			set
			{
				Projeler previousValue = this._Projeler.Entity;
				if (((previousValue != value) 
							|| (this._Projeler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projeler.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Projeler.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._proje_id = value.proje_id;
					}
					else
					{
						this._proje_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Projeler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subeler_Hocalar", Storage="_Subeler", ThisKey="sube_id", OtherKey="sube_id", IsForeignKey=true)]
		public Subeler Subeler
		{
			get
			{
				return this._Subeler.Entity;
			}
			set
			{
				Subeler previousValue = this._Subeler.Entity;
				if (((previousValue != value) 
							|| (this._Subeler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subeler.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Subeler.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._sube_id = value.sube_id;
					}
					else
					{
						this._sube_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Subeler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Odemeler")]
	public partial class Odemeler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ödeme_id;
		
		private System.Nullable<int> _cocuk_id;
		
		private System.Nullable<decimal> _Tutar;
		
		private string _OdemeTipi;
		
		private string _GecerlilikDurumu;
		
		private EntityRef<Cocuk> _Cocuk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onödeme_idChanging(int value);
    partial void Onödeme_idChanged();
    partial void Oncocuk_idChanging(System.Nullable<int> value);
    partial void Oncocuk_idChanged();
    partial void OnTutarChanging(System.Nullable<decimal> value);
    partial void OnTutarChanged();
    partial void OnOdemeTipiChanging(string value);
    partial void OnOdemeTipiChanged();
    partial void OnGecerlilikDurumuChanging(string value);
    partial void OnGecerlilikDurumuChanged();
    #endregion
		
		public Odemeler()
		{
			this._Cocuk = default(EntityRef<Cocuk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ödeme_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ödeme_id
		{
			get
			{
				return this._ödeme_id;
			}
			set
			{
				if ((this._ödeme_id != value))
				{
					this.Onödeme_idChanging(value);
					this.SendPropertyChanging();
					this._ödeme_id = value;
					this.SendPropertyChanged("ödeme_id");
					this.Onödeme_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cocuk_id", DbType="Int")]
		public System.Nullable<int> cocuk_id
		{
			get
			{
				return this._cocuk_id;
			}
			set
			{
				if ((this._cocuk_id != value))
				{
					if (this._Cocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncocuk_idChanging(value);
					this.SendPropertyChanging();
					this._cocuk_id = value;
					this.SendPropertyChanged("cocuk_id");
					this.Oncocuk_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tutar", DbType="Money")]
		public System.Nullable<decimal> Tutar
		{
			get
			{
				return this._Tutar;
			}
			set
			{
				if ((this._Tutar != value))
				{
					this.OnTutarChanging(value);
					this.SendPropertyChanging();
					this._Tutar = value;
					this.SendPropertyChanged("Tutar");
					this.OnTutarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdemeTipi", DbType="VarChar(50)")]
		public string OdemeTipi
		{
			get
			{
				return this._OdemeTipi;
			}
			set
			{
				if ((this._OdemeTipi != value))
				{
					this.OnOdemeTipiChanging(value);
					this.SendPropertyChanging();
					this._OdemeTipi = value;
					this.SendPropertyChanged("OdemeTipi");
					this.OnOdemeTipiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GecerlilikDurumu", DbType="VarChar(50)")]
		public string GecerlilikDurumu
		{
			get
			{
				return this._GecerlilikDurumu;
			}
			set
			{
				if ((this._GecerlilikDurumu != value))
				{
					this.OnGecerlilikDurumuChanging(value);
					this.SendPropertyChanging();
					this._GecerlilikDurumu = value;
					this.SendPropertyChanged("GecerlilikDurumu");
					this.OnGecerlilikDurumuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Odemeler", Storage="_Cocuk", ThisKey="cocuk_id", OtherKey="cocuk_id", IsForeignKey=true)]
		public Cocuk Cocuk
		{
			get
			{
				return this._Cocuk.Entity;
			}
			set
			{
				Cocuk previousValue = this._Cocuk.Entity;
				if (((previousValue != value) 
							|| (this._Cocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cocuk.Entity = null;
						previousValue.Odemelers.Remove(this);
					}
					this._Cocuk.Entity = value;
					if ((value != null))
					{
						value.Odemelers.Add(this);
						this._cocuk_id = value.cocuk_id;
					}
					else
					{
						this._cocuk_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cocuk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projeler")]
	public partial class Projeler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _proje_id;
		
		private System.Nullable<int> _cocuk_id;
		
		private string _ProjeAdi;
		
		private string _KatildigiSehir;
		
		private string _ProjeKonusu;
		
		private EntitySet<Hocalar> _Hocalars;
		
		private EntityRef<Cocuk> _Cocuk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproje_idChanging(int value);
    partial void Onproje_idChanged();
    partial void Oncocuk_idChanging(System.Nullable<int> value);
    partial void Oncocuk_idChanged();
    partial void OnProjeAdiChanging(string value);
    partial void OnProjeAdiChanged();
    partial void OnKatildigiSehirChanging(string value);
    partial void OnKatildigiSehirChanged();
    partial void OnProjeKonusuChanging(string value);
    partial void OnProjeKonusuChanged();
    #endregion
		
		public Projeler()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			this._Cocuk = default(EntityRef<Cocuk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proje_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int proje_id
		{
			get
			{
				return this._proje_id;
			}
			set
			{
				if ((this._proje_id != value))
				{
					this.Onproje_idChanging(value);
					this.SendPropertyChanging();
					this._proje_id = value;
					this.SendPropertyChanged("proje_id");
					this.Onproje_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cocuk_id", DbType="Int")]
		public System.Nullable<int> cocuk_id
		{
			get
			{
				return this._cocuk_id;
			}
			set
			{
				if ((this._cocuk_id != value))
				{
					if (this._Cocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncocuk_idChanging(value);
					this.SendPropertyChanging();
					this._cocuk_id = value;
					this.SendPropertyChanged("cocuk_id");
					this.Oncocuk_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjeAdi", DbType="VarChar(50)")]
		public string ProjeAdi
		{
			get
			{
				return this._ProjeAdi;
			}
			set
			{
				if ((this._ProjeAdi != value))
				{
					this.OnProjeAdiChanging(value);
					this.SendPropertyChanging();
					this._ProjeAdi = value;
					this.SendPropertyChanged("ProjeAdi");
					this.OnProjeAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KatildigiSehir", DbType="VarChar(50)")]
		public string KatildigiSehir
		{
			get
			{
				return this._KatildigiSehir;
			}
			set
			{
				if ((this._KatildigiSehir != value))
				{
					this.OnKatildigiSehirChanging(value);
					this.SendPropertyChanging();
					this._KatildigiSehir = value;
					this.SendPropertyChanged("KatildigiSehir");
					this.OnKatildigiSehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjeKonusu", DbType="VarChar(50)")]
		public string ProjeKonusu
		{
			get
			{
				return this._ProjeKonusu;
			}
			set
			{
				if ((this._ProjeKonusu != value))
				{
					this.OnProjeKonusuChanging(value);
					this.SendPropertyChanging();
					this._ProjeKonusu = value;
					this.SendPropertyChanged("ProjeKonusu");
					this.OnProjeKonusuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projeler_Hocalar", Storage="_Hocalars", ThisKey="proje_id", OtherKey="proje_id")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Projeler", Storage="_Cocuk", ThisKey="cocuk_id", OtherKey="cocuk_id", IsForeignKey=true)]
		public Cocuk Cocuk
		{
			get
			{
				return this._Cocuk.Entity;
			}
			set
			{
				Cocuk previousValue = this._Cocuk.Entity;
				if (((previousValue != value) 
							|| (this._Cocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cocuk.Entity = null;
						previousValue.Projelers.Remove(this);
					}
					this._Cocuk.Entity = value;
					if ((value != null))
					{
						value.Projelers.Add(this);
						this._cocuk_id = value.cocuk_id;
					}
					else
					{
						this._cocuk_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cocuk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Projeler = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Projeler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rehberlik")]
	public partial class Rehberlik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rehberlik_id;
		
		private System.Nullable<int> _cocuk_id;
		
		private string _RehberlikDurum;
		
		private string _Aciklama;
		
		private string _Tespit;
		
		private EntityRef<Cocuk> _Cocuk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrehberlik_idChanging(int value);
    partial void Onrehberlik_idChanged();
    partial void Oncocuk_idChanging(System.Nullable<int> value);
    partial void Oncocuk_idChanged();
    partial void OnRehberlikDurumChanging(string value);
    partial void OnRehberlikDurumChanged();
    partial void OnAciklamaChanging(string value);
    partial void OnAciklamaChanged();
    partial void OnTespitChanging(string value);
    partial void OnTespitChanged();
    #endregion
		
		public Rehberlik()
		{
			this._Cocuk = default(EntityRef<Cocuk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rehberlik_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int rehberlik_id
		{
			get
			{
				return this._rehberlik_id;
			}
			set
			{
				if ((this._rehberlik_id != value))
				{
					this.Onrehberlik_idChanging(value);
					this.SendPropertyChanging();
					this._rehberlik_id = value;
					this.SendPropertyChanged("rehberlik_id");
					this.Onrehberlik_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cocuk_id", DbType="Int")]
		public System.Nullable<int> cocuk_id
		{
			get
			{
				return this._cocuk_id;
			}
			set
			{
				if ((this._cocuk_id != value))
				{
					if (this._Cocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncocuk_idChanging(value);
					this.SendPropertyChanging();
					this._cocuk_id = value;
					this.SendPropertyChanged("cocuk_id");
					this.Oncocuk_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RehberlikDurum", DbType="VarChar(50)")]
		public string RehberlikDurum
		{
			get
			{
				return this._RehberlikDurum;
			}
			set
			{
				if ((this._RehberlikDurum != value))
				{
					this.OnRehberlikDurumChanging(value);
					this.SendPropertyChanging();
					this._RehberlikDurum = value;
					this.SendPropertyChanged("RehberlikDurum");
					this.OnRehberlikDurumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aciklama", DbType="VarChar(50)")]
		public string Aciklama
		{
			get
			{
				return this._Aciklama;
			}
			set
			{
				if ((this._Aciklama != value))
				{
					this.OnAciklamaChanging(value);
					this.SendPropertyChanging();
					this._Aciklama = value;
					this.SendPropertyChanged("Aciklama");
					this.OnAciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tespit", DbType="VarChar(50)")]
		public string Tespit
		{
			get
			{
				return this._Tespit;
			}
			set
			{
				if ((this._Tespit != value))
				{
					this.OnTespitChanging(value);
					this.SendPropertyChanging();
					this._Tespit = value;
					this.SendPropertyChanged("Tespit");
					this.OnTespitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Rehberlik", Storage="_Cocuk", ThisKey="cocuk_id", OtherKey="cocuk_id", IsForeignKey=true)]
		public Cocuk Cocuk
		{
			get
			{
				return this._Cocuk.Entity;
			}
			set
			{
				Cocuk previousValue = this._Cocuk.Entity;
				if (((previousValue != value) 
							|| (this._Cocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cocuk.Entity = null;
						previousValue.Rehberliks.Remove(this);
					}
					this._Cocuk.Entity = value;
					if ((value != null))
					{
						value.Rehberliks.Add(this);
						this._cocuk_id = value.cocuk_id;
					}
					else
					{
						this._cocuk_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cocuk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subeler")]
	public partial class Subeler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sube_id;
		
		private System.Nullable<int> _cocuk_id;
		
		private System.Nullable<int> _birim_id;
		
		private string _SubeAdi;
		
		private EntitySet<Hocalar> _Hocalars;
		
		private EntityRef<Cocuk> _Cocuk;
		
		private EntityRef<Birimler> _Birimler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsube_idChanging(int value);
    partial void Onsube_idChanged();
    partial void Oncocuk_idChanging(System.Nullable<int> value);
    partial void Oncocuk_idChanged();
    partial void Onbirim_idChanging(System.Nullable<int> value);
    partial void Onbirim_idChanged();
    partial void OnSubeAdiChanging(string value);
    partial void OnSubeAdiChanged();
    #endregion
		
		public Subeler()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			this._Cocuk = default(EntityRef<Cocuk>);
			this._Birimler = default(EntityRef<Birimler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sube_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sube_id
		{
			get
			{
				return this._sube_id;
			}
			set
			{
				if ((this._sube_id != value))
				{
					this.Onsube_idChanging(value);
					this.SendPropertyChanging();
					this._sube_id = value;
					this.SendPropertyChanged("sube_id");
					this.Onsube_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cocuk_id", DbType="Int")]
		public System.Nullable<int> cocuk_id
		{
			get
			{
				return this._cocuk_id;
			}
			set
            {

                this._cocuk_id = value;
                this.SendPropertyChanged("cocuk_id");
                this.Oncocuk_idChanged();





                //if ((this._cocuk_id != value))
                //{
                //    if (this._Cocuk.HasLoadedOrAssignedValue)
                //    {
                //        //throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                //    }
                //    this.Oncocuk_idChanging(value);
                //    this.SendPropertyChanging();
                //    this._cocuk_id = value;
                //    this.SendPropertyChanged("cocuk_id");
                //    this.Oncocuk_idChanged();
                //}
            }
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birim_id", DbType="Int")]
		public System.Nullable<int> birim_id
		{
			get
			{
				return this._birim_id;
			}
			set
			{

                 //   this.Onbirim_idChanging(value);
                	//this.SendPropertyChanging();
                	this._birim_id = value;
                	this.SendPropertyChanged("birim_id");
                	this.Onbirim_idChanged();



                //	if ((this._birim_id != value))
                //	{
                //                 if (this._Birimler.HasLoadedOrAssignedValue)
                //                 {
                //                     //throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                //                 }
                //                 this.Onbirim_idChanging(value);
                //		this.SendPropertyChanging();
                //		this._birim_id = value;
                //		this.SendPropertyChanged("birim_id");
                //		this.Onbirim_idChanged();
                //	}
            }
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubeAdi", DbType="VarChar(50)")]
		public string SubeAdi
		{
			get
			{
				return this._SubeAdi;
			}
			set
			{



                this._SubeAdi = value;
                this.SendPropertyChanged("SubeAdi");
                this.OnSubeAdiChanged();


                //if ((this._SubeAdi != value))
                //{
                //	this.OnSubeAdiChanging(value);
                //	this.SendPropertyChanging();
                //	this._SubeAdi = value;
                //	this.SendPropertyChanged("SubeAdi");
                //	this.OnSubeAdiChanged();
                //}
            }
        }
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subeler_Hocalar", Storage="_Hocalars", ThisKey="sube_id", OtherKey="sube_id")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cocuk_Subeler", Storage="_Cocuk", ThisKey="cocuk_id", OtherKey="cocuk_id", IsForeignKey=true)]
		public Cocuk Cocuk
		{
			get
			{
				return this._Cocuk.Entity;
			}
			set
			{
				Cocuk previousValue = this._Cocuk.Entity;
				if (((previousValue != value) 
							|| (this._Cocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cocuk.Entity = null;
						previousValue.Subelers.Remove(this);
					}
					this._Cocuk.Entity = value;
					if ((value != null))
					{
						value.Subelers.Add(this);
						this._cocuk_id = value.cocuk_id;
					}
					else
					{
						this._cocuk_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cocuk");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Birimler_Subeler", Storage="_Birimler", ThisKey="birim_id", OtherKey="birim_id", IsForeignKey=true)]
		public Birimler Birimler
		{
			get
			{
				return this._Birimler.Entity;
			}
			set
			{
				Birimler previousValue = this._Birimler.Entity;
				if (((previousValue != value) 
							|| (this._Birimler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Birimler.Entity = null;
						previousValue.Subelers.Remove(this);
					}
					this._Birimler.Entity = value;
					if ((value != null))
					{
						value.Subelers.Add(this);
						this._birim_id = value.birim_id;
					}
					else
					{
						this._birim_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Birimler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Subeler = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Subeler = null;
		}
	}
}
#pragma warning restore 1591
